{
  "code": "import BaseConfig from \"../config/BaseConfig\";\r\nexport default class network {\r\n    constructor() {\r\n        this.pause = false;\r\n        this.eList = new Array();\r\n        this.types = {};\r\n        this.byte = new Laya.Byte();\r\n        this.byte.endian = Laya.Byte.LITTLE_ENDIAN;\r\n        this.socket = new Laya.Socket();\r\n        this.socket.endian = Laya.Byte.LITTLE_ENDIAN;\r\n        this.connect();\r\n    }\r\n    static getinstance() {\r\n        if (this.instance == null)\r\n            this.instance = new network();\r\n        return this.instance;\r\n    }\r\n    addNetEvent(type, handler) {\r\n        this.types[type] = handler;\r\n    }\r\n    removeEvent(type) {\r\n        if (this.types[type])\r\n            delete this.types[type];\r\n    }\r\n    connect() {\r\n        this.socket.connectByUrl(BaseConfig.socket);\r\n        this.socket.on(Laya.Event.OPEN, this, this.openHandler);\r\n        this.socket.on(Laya.Event.MESSAGE, this, this.receiveHandler);\r\n        this.socket.on(Laya.Event.CLOSE, this, this.closeHandler);\r\n        this.socket.on(Laya.Event.ERROR, this, this.errorHandler);\r\n    }\r\n    pauseEvent() {\r\n        this.pause = true;\r\n    }\r\n    resumeEvent() {\r\n        this.pause = false;\r\n    }\r\n    openHandler(event = null) {\r\n        console.log(\"链接成功\");\r\n        Laya.timer.frameLoop(1, this, () => {\r\n            if (this.pause || !this.types || this.eList.length == 0)\r\n                return;\r\n            while (this.eList.length) {\r\n                let msg = this.eList[0];\r\n                let name = msg.Name || msg.name;\r\n                console.log(name);\r\n                if (this.types[name])\r\n                    this.types[name](msg.Data);\r\n                else\r\n                    console.log(\"noRigster\", name);\r\n                this.eList.shift();\r\n            }\r\n        });\r\n    }\r\n    receiveHandler(msg = null) {\r\n        let data = JSON.parse(msg);\r\n        this.eList.push(data);\r\n    }\r\n    closeHandler(e = null) {\r\n        console.log(\"close\", e);\r\n    }\r\n    errorHandler(e = null) {\r\n        console.log(\"error\", e);\r\n    }\r\n    sendMsg(type, data) {\r\n        data.Name = type;\r\n        this.socket.send(JSON.stringify(data));\r\n    }\r\n}\r\n",
  "references": [
    "C:/Users/Administrator/Documents/QiPaiClient/src/config/BaseConfig.ts"
  ]
}
